/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB           &kp X  &kp V  &kp L     &kp C  &kp W        &kp K    &kp H  &kp G      &kp F    &kp Q  &kp BSPC
&kp LEFT_SHIFT    &kp U  &kp I  &kp A     &kp E  &kp O        &kp S    &kp N  &kp R      &kp T    &kp D  &kp Y
&kp LEFT_CONTROL  &kp Z  &kp X  &kp C     &kp P  &kp Z        &kp B    &kp M  &kp COMMA  &kp DOT  &kp J  &kp ESC
                                &kp LGUI  &mo 1  &kp SPACE    &kp RET  &mo 2  &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB     &kp N1        &kp BSPC  &kp UP    &kp DEL    &kp PAGE_UP      &kp PRINTSCREEN  &kp N7  &kp N8    &kp N9  &kp N0    &kp BSPC
&bt BT_CLR  &bt BT_SEL 0  &kp LEFT  &kp DOWN  &kp RIGHT  &kp PAGE_DOWN    &kp PLUS         &kp N4  &kp N5    &kp N6  &kp STAR  &trans
&kp LSHFT   &trans        &trans    &kp DOT   &kp SQT    &trans           &kp MINUS        &kp N1  &kp N2    &kp N3  &kp FSLH  &trans
                                    &kp LGUI  &trans     &kp SPACE        &kp RET          &kp N0  &kp RALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp UNDER  &kp LBKT  &kp RBKT  &kp CARET  &kp PRCNT    &kp EXCL   &kp LT     &kp GT    &kp EQUAL  &kp AMPS   &kp BSPC
&kp LCTRL  &kp BSLH   &kp FSLH  &kp LBRC  &kp RBRC   &kp STAR     &kp QMARK  &kp LPAR   &kp RPAR  &kp MINUS  &kp COLON  &kp AT
&kp LSHFT  &kp POUND  &kp DLLR  &kp PIPE  &kp TILDE  &kp GRAVE    &kp PLUS   &kp PRCNT  &kp DQT   &kp SQT    &kp SEMI   &kp TILDE
                                &kp LGUI  &trans     &kp SPACE    &kp RET    &trans     &kp RALT
            >;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans      &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &bt BT_NXT  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans      &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans      &trans  &trans    &trans  &trans  &trans
            >;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
